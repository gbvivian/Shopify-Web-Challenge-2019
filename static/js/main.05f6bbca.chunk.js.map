{"version":3,"sources":["components/SearchBar.jsx","components/Star.jsx","components/Item.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","onSearch","state","userInput","handleChange","setState","target","value","react_default","a","createElement","Fragment","onSubmit","className","type","placeholder","onChange","Component","Star","handleClick","console","log","onClickHandler","isFavourited","id","name","checked","for","Item","setFavouriteState","favState","handleFavourite","title","itemName","body","itemDesc","decodeHTML","html","DOMParser","parseFromString","innerText","components_Star","dangerouslySetInnerHTML","__html","App","getData","fetch","then","response","json","handleSearch","input","itemList","filteredItemList","filter","item","keywords","includes","map","objectSpread","filteredItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","favourites","Symbol","iterator","next","done","favouritedItem","err","return","containsKeyword","split","checkedState","addToFavourites","removeFromFavourites","newItemList","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newItem","concat","toConsumableArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","isLoading","_this2","components_SearchBar","index","components_Item","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05f6bbca.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tuserInput: 'rope'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"Search-bar\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search for something\"\n\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input type=\"submit\" />\n\t\t\t\t</form>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.onSearch(this.state.userInput);\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tuserInput: event.target.value\n\t\t});\n\t};\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\n\nclass Star extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t//TODO: double check if event even fits LOL\n\thandleClick = (event) => {\n\t\tconsole.log('this is the event:', event.target);\n\t\tthis.props.onClickHandler(!this.props.isFavourited);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tid=\"c1\"\n\t\t\t\t\tname=\"cc\"\n\t\t\t\t\tchecked={this.props.isFavourited}\n\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t/>\n\t\t\t\t<label for=\"c1\">\n\t\t\t\t\t<span className=\"star-five\" />\n\t\t\t\t</label>\n\n\t\t\t\t{/* THIS WORKS */}\n\t\t\t\t{/*\n\t\t\t\t<input type=\"checkbox\" id=\"c1\" name=\"cc\" />\n\t\t\t\t<label for=\"c1\">\n\t\t\t\t\t<span>Check Box 1</span>\n\t\t\t\t</label> */}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Star;\n","import React, { Component } from 'react';\nimport Star from './Star';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconsole.log(props);\n\t}\n\n\tsetFavouriteState = (favState) => {\n\t\tthis.props.handleFavourite(favState, {\n\t\t\tisFavourited: favState,\n\t\t\ttitle: this.props.itemName,\n\t\t\tbody: this.props.itemDesc\n\t\t});\n\t};\n\n\tdecodeHTML = (html) => {\n\t\tvar doc = new DOMParser().parseFromString(html, 'text/html');\n\t\treturn doc.body.innerText;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Item\">\n\t\t\t\t<Star isFavourited={this.props.isFavourited} onClickHandler={this.setFavouriteState} />\n\t\t\t\t{/* TODO: CAN PROBABLY DELETE LINE BELOW */}\n\t\t\t\t{/* <input type=\"checkbox\" onChange={this.props.handleChange} /> */}\n\n\t\t\t\t<div className=\"item1\">{this.props.itemName}</div>\n\t\t\t\t<div className=\"desc\" dangerouslySetInnerHTML={{ __html: this.decodeHTML(this.props.itemDesc) }} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport Item from './components/Item';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\t// filteredItems: [{ [title: ___, desc: ____, keywords: ___, isFavourited: ____]\n\t\t\tfilteredItems: [],\n\t\t\t// favourites: [{[title: ___, desc: ____, isFavourited: ____]}],\n\t\t\tfavourites: []\n\t\t};\n\n\t\tthis.getData();\n\t}\n\n\tgetData = () => {\n\t\treturn fetch('https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000').then((response) => {\n\t\t\treturn response.json();\n\t\t});\n\t};\n\n\thandleSearch = (input) => {\n\t\tthis.getData().then((itemList) => {\n\t\t\tvar filteredItemList = itemList.filter((item) => item.keywords.includes(input));\n\n\t\t\tfilteredItemList = filteredItemList.map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tisFavourited: this.isFavourited(item)\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.setState({ filteredItems: filteredItemList });\n\n\t\t\t// for every item, initialize title, body, keywords, and initialize isFavourited to be the appropriate state\n\t\t\t// check if item is in Favourites list, if it is, set isFavourited to true. otherwise, false.\n\n\t\t\t// FOR TESTING\n\t\t\t// console.log('input is ' + input);\n\t\t\t// console.log('itemList[0] keywords are: ' + itemList[0].keywords);\n\t\t\t// console.log(this.containsKeyword(input, itemList[0].keywords));\n\t\t});\n\t};\n\n\tisFavourited = (item) => {\n\t\tfor (let favouritedItem of this.state.favourites) {\n\t\t\tif (item.title === favouritedItem.title) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// NEW CONTAINS KEYWORD\n\t// split the keywords string into an array of keywords\n\t// if, within the item's keywords, we find the INPUT, we say yes!\n\tcontainsKeyword = (input, keywords) => {\n\t\tvar splitKeywordsArr = keywords.split(', ');\n\t\t// console.log(splitKeywordsArr.includes(input));\n\t\treturn splitKeywordsArr.includes(input);\n\t\t/*\n\t\tfor (let keyword of splitKeywordsArr) {\n\t\t\tif (input === keyword) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t\t*/\n\t};\n\n\t// TODO: Fix this function\n\thandleFavourite = (checkedState, item) => {\n\t\tconsole.log('handleFavourite called');\n\t\tconsole.log(checkedState);\n\t\tconsole.log(item);\n\t\tif (checkedState) {\n\t\t\tthis.addToFavourites(item);\n\t\t} else {\n\t\t\tthis.removeFromFavourites(item);\n\t\t}\n\t};\n\n\taddToFavourites = (item) => {\n\t\tvar newItemList = this.state.filteredItems;\n\t\tfor (let newItem of newItemList) {\n\t\t\tif (item.title === newItem.title) {\n\t\t\t\tnewItem.isFavourited = true;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfavourites: [ ...this.state.favourites, item ],\n\t\t\tfilteredItemList: newItemList\n\t\t});\n\t};\n\n\t// given an item, remove it from the favourites list\n\t// it will be guaranteed that it is on the favourite list\n\t// (ok to assume that the checked state is checked)\n\tremoveFromFavourites = (item) => {\n\t\tvar newItemList = this.state.filteredItems;\n\t\tfor (let newItem of newItemList) {\n\t\t\tif (item.title === newItem.title) {\n\t\t\t\tnewItem.isFavourited = false;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfavourites: this.state.favourites.filter((favouritedItem) => favouritedItem.title !== item.title),\n\t\t\tfilteredItemList: newItemList\n\t\t});\n\t};\n\n\t// TO ADD\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">Toronto Waste Lookup</header>\n\n\t\t\t\t<SearchBar onSearch={this.handleSearch} />\n\t\t\t\t{/* THIS SECTION WORKS */}\n\t\t\t\t{/* <input type=\"checkbox\" id=\"c1\" name=\"cc\" />\n\t\t\t\t<label for=\"c1\">\n\t\t\t\t\t<span>Check Box 1</span>\n\t\t\t\t</label> */}\n\n\t\t\t\t{/* EXPERIMENTAL SECTION */}\n\t\t\t\t{/* <input type=\"checkbox\" id=\"c1\" name=\"cc\" />\n\t\t\t\t<label for=\"c1\">\n\t\t\t\t\t<span>Check Box 1</span>\n\t\t\t\t</label> */}\n\n\t\t\t\t{this.state.filteredItems.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tisFavourited={item.isFavourited}\n\t\t\t\t\t\t\titemName={item.title}\n\t\t\t\t\t\t\titemDesc={item.body}\n\t\t\t\t\t\t\thandleFavourite={this.handleFavourite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t\t// return <Item key={index} itemName={item.title} itemDesc={this.htmlParser(item.body)} />;\n\t\t\t\t})}\n\t\t\t\t<div>Favourites</div>\n\t\t\t\t{this.state.favourites.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tisFavourited={item.isFavourited}\n\t\t\t\t\t\t\titemName={item.title}\n\t\t\t\t\t\t\titemDesc={item.body}\n\t\t\t\t\t\t\thandleFavourite={this.handleFavourite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// TODO: uncomment\n// function Item(props) {\n// \treturn (\n// \t\t<div className=\"Item\">\n// \t\t\t<Star onChange={this.props.handleChange} />\n// \t\t\t{/* <input type=\"checkbox\" onChange={props.handleChange} /> */}\n\n// \t\t\t<div className=\"item1\">{props.itemName}</div>\n// \t\t\t<div className=\"desc\">{props.itemDesc}</div>\n// \t\t</div>\n// \t);\n// }\n\n// https://stackoverflow.com/questions/3700326/decode-amp-back-to-in-javascript\n// https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\n// STUFF\n// your ugly string\n// var html =\n// \t'&lt;ul&gt; \\n &lt;li&gt;Place item in the &lt;strong&gt;Garbage Bin.&lt;/strong&gt;&lt;/li&gt; \\n&lt;/ul&gt;';\n\n// // put your ugly string but then not sure what 'text/html' does\n// var doc = new DOMParser().parseFromString(html, 'text/html');\n// // LOL ya copy pasta this?\n// document.getElementById('c').innerHTML = doc.body.innerText;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}