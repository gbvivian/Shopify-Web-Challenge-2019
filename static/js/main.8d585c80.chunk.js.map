{"version":3,"sources":["components/SearchBar.jsx","components/Star.jsx","components/Item.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","onSearch","state","userInput","handleChange","setState","target","value","onEmptyInput","react_default","a","createElement","Fragment","className","onSubmit","type","placeholder","onChange","Component","guidGenerator","S4","Math","random","toString","substring","Star","handleClick","onClickHandler","isFavourited","id","name","checked","htmlFor","Item","setFavouriteState","favState","handleFavourite","title","itemName","body","itemDesc","decodeHTML","html","DOMParser","parseFromString","innerText","components_Star","dangerouslySetInnerHTML","__html","App","getTorontoWasteData","fetch","then","response","json","handleSearch","input","itemList","filteredItemList","filter","item","keywords","includes","map","objectSpread","filteredItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","favourites","Symbol","iterator","next","done","favouritedItem","err","return","containsKeyword","split","checkedState","addToFavourites","removeFromFavourites","newItemList","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newItem","concat","toConsumableArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","clearFilteredItems","_this2","filteredSection","index","components_Item","key","favouritesSection","length","components_SearchBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d585c80.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuserInput: 'straw'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<form className=\"d-flex bd-highlight\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"Search-bar mr-3 from-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search for something\"\n\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"input-group-append\">\n\t\t\t\t\t\t<button className=\"btn btn-outline-success\" type=\"submit\">\n\t\t\t\t\t\t\t<i className=\"fa fa-search fa-flip-horizontal\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</form>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.onSearch(this.state.userInput);\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tuserInput: event.target.value\n\t\t});\n\t\tif (event.target.value === '') {\n\t\t\tthis.props.onEmptyInput();\n\t\t}\n\t};\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\n\nfunction guidGenerator() {\n\tvar S4 = function() {\n\t\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t};\n\treturn S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4();\n}\n\nclass Star extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: guidGenerator()\n\t\t};\n\t}\n\n\thandleClick = (event) => {\n\t\tthis.props.onClickHandler(!this.props.isFavourited);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tid={this.state.id}\n\t\t\t\t\tname=\"cc\"\n\t\t\t\t\tchecked={this.props.isFavourited}\n\t\t\t\t\tonChange={this.handleClick}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor={this.state.id}>\n\t\t\t\t\t<span className=\"star-five\" />\n\t\t\t\t</label>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Star;\n","import React, { Component } from 'react';\nimport Star from './Star';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tsetFavouriteState = (favState) => {\n\t\tthis.props.handleFavourite(favState, {\n\t\t\tisFavourited: favState,\n\t\t\ttitle: this.props.itemName,\n\t\t\tbody: this.props.itemDesc\n\t\t});\n\t};\n\n\tdecodeHTML = (html) => {\n\t\tvar doc = new DOMParser().parseFromString(html, 'text/html');\n\t\treturn doc.body.innerText;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"d-flex flex-row bd-highlight\">\n\t\t\t\t<div className=\"p-2 bd-highlight\">\n\t\t\t\t\t<Star isFavourited={this.props.isFavourited} onClickHandler={this.setFavouriteState} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"item-title p-2 bd-highlight\">{this.props.itemName}</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"item-desc p-2 bd-highlight\"\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: this.decodeHTML(this.props.itemDesc) }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport Item from './components/Item';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilteredItems: [],\n\t\t\tfavourites: []\n\t\t};\n\t\tthis.getTorontoWasteData();\n\t}\n\n\tgetTorontoWasteData = () => {\n\t\treturn fetch('https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000').then((response) => {\n\t\t\treturn response.json();\n\t\t});\n\t};\n\n\thandleSearch = (input) => {\n\t\tthis.getTorontoWasteData().then((itemList) => {\n\t\t\tvar filteredItemList = itemList.filter((item) => item.keywords.includes(input));\n\t\t\tfilteredItemList = filteredItemList.map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tisFavourited: this.isFavourited(item)\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.setState({ filteredItems: filteredItemList });\n\t\t});\n\t};\n\n\tisFavourited = (item) => {\n\t\tfor (let favouritedItem of this.state.favourites) {\n\t\t\tif (item.title === favouritedItem.title) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tcontainsKeyword = (input, keywords) => {\n\t\tvar splitKeywordsArr = keywords.split(', ');\n\t\treturn splitKeywordsArr.includes(input);\n\t};\n\n\thandleFavourite = (checkedState, item) => {\n\t\tif (checkedState) {\n\t\t\tthis.addToFavourites(item);\n\t\t} else {\n\t\t\tthis.removeFromFavourites(item);\n\t\t}\n\t};\n\n\taddToFavourites = (item) => {\n\t\tvar newItemList = this.state.filteredItems;\n\t\tfor (let newItem of newItemList) {\n\t\t\tif (item.title === newItem.title) {\n\t\t\t\tnewItem.isFavourited = true;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfavourites: [ ...this.state.favourites, item ],\n\t\t\tfilteredItemList: newItemList\n\t\t});\n\t};\n\n\tremoveFromFavourites = (item) => {\n\t\tvar newItemList = this.state.filteredItems;\n\t\tfor (let newItem of newItemList) {\n\t\t\tif (item.title === newItem.title) {\n\t\t\t\tnewItem.isFavourited = false;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfavourites: this.state.favourites.filter((favouritedItem) => favouritedItem.title !== item.title),\n\t\t\tfilteredItems: newItemList\n\t\t});\n\t};\n\n\tclearFilteredItems = () => {\n\t\tthis.setState({ filteredItems: [] });\n\t};\n\n\trender() {\n\t\tvar filteredSection = (\n\t\t\t<div className=\"mt-5 mx-3\">\n\t\t\t\t{this.state.filteredItems.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tisFavourited={item.isFavourited}\n\t\t\t\t\t\t\titemName={item.title}\n\t\t\t\t\t\t\titemDesc={item.body}\n\t\t\t\t\t\t\thandleFavourite={this.handleFavourite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\n\t\t// Only render the favourites section if there are items in there.\n\t\tvar favouritesSection = this.state.favourites.length > 0 && (\n\t\t\t<div className=\"mt-5 px-3 favourites-container\">\n\t\t\t\t<h1 className=\"favourites-title\">Favourites</h1>\n\t\t\t\t{this.state.favourites.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tisFavourited={item.isFavourited}\n\t\t\t\t\t\t\titemName={item.title}\n\t\t\t\t\t\t\titemDesc={item.body}\n\t\t\t\t\t\t\thandleFavourite={this.handleFavourite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header className=\"App-header\">Toronto Waste Lookup</header>\n\t\t\t\t<div className=\"mt-3 mx-3\">\n\t\t\t\t\t<SearchBar onSearch={this.handleSearch} onEmptyInput={this.clearFilteredItems} />\n\t\t\t\t</div>\n\t\t\t\t{filteredSection}\n\t\t\t\t{favouritesSection}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}